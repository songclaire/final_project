package kr.or.ddit.emp.lectroomManage.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.inject.Inject;

import org.springframework.context.annotation.Bean;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.filter.HiddenHttpMethodFilter;

import kr.or.ddit.emp.lectroomManage.service.LectroomManageService;
import kr.or.ddit.prof.lectSylla.service.LectureSyllabusService;
import kr.or.ddit.ui.PaginationRenderer;
import kr.or.ddit.vo.BuildingVO;
import kr.or.ddit.vo.LectRoomVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.SearchVO;
import kr.or.ddit.vo.SyllabusVO;
import lombok.extern.slf4j.Slf4j;


/**
 * @author PC-17
 * @Since 2023. 2. 18.
 * <pre>
 *
 * ======[[개정이력(Modification Information)]]======
 *   수정일                    수정자                        수정내용
 * --------          --------    -----------------------
 * 2023. 2. 18.       서범수       수정
 *
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */
@Slf4j
@Controller
@RequestMapping("/emp/lectroomManage")
public class LectureroomManageController {

	@Inject
	private LectroomManageService service;
	@Inject	
	private LectureSyllabusService service2;
	
	@Resource(name="bootstrapPaginationRender")
	private PaginationRenderer renderer;
	
	@Bean
	public HiddenHttpMethodFilter hiddenHttpMethodFilter(){
		return new HiddenHttpMethodFilter();
	}
	
	/**
	 * syllabus 속성 생성 메소드
	 * @return
	 */
	@ModelAttribute("syllabus")
	public SyllabusVO sylla() {
		return new SyllabusVO();
	}
	
	/**
	 * 강의계획서 관리 목록 출력 메소드
	 * @return
	 */
	@GetMapping
	public String lectroomManageUI(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage
			, @ModelAttribute("simpleCondition") SearchVO searchVO
			, Model model
		) {
		
		PagingVO<SyllabusVO> pagingVO = new PagingVO<>(10, 5);
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setSimpleCondition(searchVO);
		
		service.retrieveLectroomManageList(pagingVO);
		model.addAttribute("pagingVO", pagingVO);
		
		return "emp/lectroomManage/lectroomManage";
	}
	
	
	/**
	 * 강의계획서 관리 목록 출력 메소드
	 * @return
	 */
	@GetMapping(produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	public String lectroomManageData(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage
			, @ModelAttribute("simpleCondition") SearchVO searchVO
			, Model model
		) {
		
		PagingVO<SyllabusVO> pagingVO = new PagingVO<>(10, 5);
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setSimpleCondition(searchVO);
		
		service.retrieveLectroomManageList(pagingVO);
		model.addAttribute("pagingVO", pagingVO);
//		System.out.println("바뀐 pagingVO값은?" + pagingVO);
		model.addAttribute("pagingHTML", renderer.renderPagination(pagingVO));
//		System.out.println("pagingHTML은 뭐야?" + renderer.renderPagination(pagingVO));
		
		return "jsonView";
	}
	
	@GetMapping("/lectroomCheck")
	public String lectroomCheck(
		@RequestParam(value="syllaId", required=true) String syllaId
		, Model model
		) {
		
		log.info("강의실 배정화면 컨트롤러 진입");
		model.addAttribute("syllaId", syllaId);
		return syllaId;
	}
	
	@GetMapping("/lectroomForm")
	public String lectroomForm(
		@ModelAttribute("syllaId") SyllabusVO syllaId
		, Model model	
		) {
		
		SyllabusVO syllabusVO = service.retrieveSyllaInfo(syllaId);
		model.addAttribute("syllabusVO", syllabusVO);
		
		List<BuildingVO> buildingVO = service2.retrieveBuildingList();
		model.addAttribute("buildingVO", buildingVO);
		System.out.println("buildingVO 값은? " + buildingVO);
		
		return "emp/lectroomManage/LectroomManageForm";
	}
	
	@ResponseBody
	@PostMapping("/selectLectRoomList")
	public List<LectRoomVO> selectLectRoomList(
			@RequestBody BuildingVO buildingVO
		) {
		
		List<LectRoomVO> data = service2.selectLectRoomList(buildingVO);
		System.out.println("data값은?" + data);
		
		return data;
	}
	
	
	
	@ResponseBody
	@PostMapping("/insertLect")
	public Map<String, Object> insertLect(
			@RequestBody SyllabusVO syllabusVO
		){
		
		log.info("강의 등록 컨트롤러 진입");
		System.out.println("syllabusVO의 값은??" + syllabusVO);
		Map<String, Object> resultMap = new HashMap<String, Object>();
		
		SyllabusVO sylla = service.retrieveSylla(syllabusVO);
		String buildingId = syllabusVO.getBuildingId();
		sylla.setBuildingId(buildingId);
		sylla.setLectRoomId(syllabusVO.getLectRoomId());
		
		
		int asgnCnt = service.createAssignRoom(syllabusVO); // AssignRoom 등록

		int crtCnt = service.createLect(sylla);	// Lecture 등록
		resultMap.put("text", "등록성공");
		
		return resultMap;
	}
	
	
	@ResponseBody
	@PostMapping("/deleteLect")
	public Map<String, Object> deleteLect(
			@RequestBody SyllabusVO syllabusVO
		){
		
		log.info("강의 삭제 컨트롤러 진입");
		Map<String, Object> resultMap = new HashMap<String, Object>();
		
		int delLect = service.removeLecture(syllabusVO);
		int delAsgn = service.removeAssignRoom(syllabusVO);
		resultMap.put("text", "삭제성공");
		
		return resultMap;
	}
	
}
