package kr.or.ddit.student.consult.controller;

import javax.annotation.Resource;
import javax.inject.Inject;

import org.springframework.context.annotation.Bean;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.filter.HiddenHttpMethodFilter;

import kr.or.ddit.student.consult.service.StudentConsultService;
import kr.or.ddit.ui.PaginationRenderer;
import kr.or.ddit.vo.NoticeVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.SearchVO;
import kr.or.ddit.vo.ConsultVO;


/**
 * @author 민경진
 * @Since 2023. 2. 17.
 * <pre>
 *
 * ======[[개정이력(Modification Information)]]======
 *   수정일                    수정자                        수정내용
 * --------        --------    -----------------------
 * 2023. 2. 17.      민경진              생성
 *
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */
@Controller
@RequestMapping("/student/consult")
public class StudentConsultController {
	
	@Inject
	private StudentConsultService service;
	
	@Resource(name="bootstrapPaginationRender")
	private PaginationRenderer renderer;
	
	@Bean
	public HiddenHttpMethodFilter hiddenHttpMethodFilter(){
		return new HiddenHttpMethodFilter();
	}
	
	/**
	 * consult 속성 생성 메소드
	 */
	@ModelAttribute("consult")
	public ConsultVO studentConsult() {
		return new ConsultVO();
	}

	@GetMapping("/on")
	public String onConsultUI(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage
			, @ModelAttribute("simpleCondition") SearchVO searchVO
			, Model model
			) {
		PagingVO<ConsultVO> pagingVO = new PagingVO<>(10, 5);
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setSimpleCondition(searchVO);
		
		service.retreiveConsultList(pagingVO);
		
		model.addAttribute("pagingVO", pagingVO);
		
		return "student/consult/onConsult";
	}
	
	@GetMapping(value="/on", produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	public String onConsultListData(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage
			, @ModelAttribute("simpleCondition") SearchVO searchVO
			, Model model
			) {
		PagingVO<ConsultVO> pagingVO = new PagingVO<>(10, 5);
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setSimpleCondition(searchVO);
		
		service.retreiveConsultList(pagingVO);
		
		model.addAttribute("pagingVO", pagingVO);
		model.addAttribute("pagingHTML", renderer.renderPagination(pagingVO));
		
		return "jsonView";
	}
	
	@RequestMapping("/off")
	public String offConsult() {
		return "student/consult/offConsult";
	}
}
