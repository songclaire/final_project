<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.emp.lectroomManage.dao.LectroomManageDAO">
	
<!-- 	<sql id="searchFrag"> -->
<!-- 		<where> -->
<!-- 			<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)"> -->
<!-- 				<choose> -->
<!-- 					<when test="simpleCondition.searchType eq 'tit'"> -->
<!-- 						INSTR(TIT, #{simpleCondition.searchWord}) > 0 -->
<!-- 					</when> -->
<!-- 	    			<when test="simpleCondition.searchType eq 'cont'"> -->
<!-- 	    				INSTR(CONT, #{simpleCondition.searchWord}) > 0 -->
<!-- 	    			</when> -->
<!-- 	    			<otherwise> -->
<!-- 	    				INSTR(TIT, #{simpleCondition.searchWord}) > 0 -->
<!-- 	    				OR -->
<!-- 	    				INSTR(CONT, #{simpleCondition.searchWord}) > 0 -->
<!-- 					</otherwise> -->
<!-- 				</choose> -->
<!-- 			</if> -->
<!-- 		</where> -->
<!-- 	</sql> -->
	
	
	<select id="selectTotalRecord" parameterType="kr.or.ddit.vo.PagingVO" resultType="int">
		SELECT COUNT(*)
		FROM SYLLA_APPR
		WHERE APRV_STATE = '3'
	</select>
	
	<resultMap type="kr.or.ddit.vo.SyllabusVO" id="ManageListMap">
		<id property="syllaId" column="SYLLA_ID"/>
		<association property="professorVO" autoMapping="true" javaType="kr.or.ddit.vo.ProfessorVO"></association>
		<association property="majorList" autoMapping="true" javaType="kr.or.ddit.vo.MajorVO"></association>
		<association property="syllaApprVO" autoMapping="true" javaType="kr.or.ddit.vo.SyllaApprVO"></association>
		<association property="subMajorVO" autoMapping="true" javaType="SubMajorVO"></association>
		<association property="lectureList" autoMapping="true" javaType="LectureVO"></association>
	</resultMap>
	
	<select id="selectLectroomManageList" parameterType="kr.or.ddit.vo.PagingVO" resultMap="ManageListMap">
		SELECT RNUM AS RNUM
		    , MAJOR_NM
		    , USER_NM
		    , TO_CHAR(APRV_DATE, 'YYYY-MM-DD') AS APRV_DATE
		    , SYLLA_ID
		    , NVL(LECT_ID, 0) AS LECT_ID
		FROM (
		    SELECT ROWNUM AS RNUM, D.MAJOR_NM, C.USER_NM , E.APRV_DATE, A.SYLLA_ID, E.APRV_STATE, F.LECT_ID
		    FROM SYLLABUS A 
		    INNER JOIN PROFESSOR B ON (A.PROF_ID = B.PROF_ID)
		    INNER JOIN USR C ON (A.PROF_ID = C.USER_ID)
		    INNER JOIN MAJOR D ON (B.MAJOR_ID = D.MAJOR_ID)
		    INNER JOIN SYLLA_APPR E ON (A.SYLLA_ID = E.SYLLA_ID)
		    LEFT OUTER JOIN LECTURE F ON (E.SYLLA_APPR_ID = F.SYLLA_APPR_ID)
		    WHERE APRV_STATE = '3'
		    ORDER BY 1 DESC
		)
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	
	<resultMap type="SyllabusVO" id="syllaInfoMap" autoMapping="true">
		<id property="syllaId" column="SYLLA_ID" />
		<association property="majorList" autoMapping="true" javaType="MajorVO"></association>
		<association property="professorVO" autoMapping="true" javaType="ProfessorVO"></association>
		<association property="subMajorVO" autoMapping="true" javaType="SubMajorVO"></association>
		<association property="lectRoomVO" autoMapping="true" javaType="LectRoomVO"></association>
	</resultMap>
	
	<select id="selectSyllaInfo" parameterType="kr.or.ddit.vo.SyllabusVO" resultMap="syllaInfoMap">
		SELECT ( SELECT USER_NM FROM USR WHERE USR.USER_ID = A.PROF_ID ) AS USER_NM
		    , C.MAJOR_NM AS MAJOR_NM
		    , A.LECT_NM AS LECT_NM
		    , (SELECT COMM_DESC
		       FROM COMM
		      WHERE COMM.COMM_ID = D.ESTA_SUB) AS ESTA_SUB
		    , A.HOPE_MAX AS HOPE_MAX
		    , A.CAM_YEAR AS CAM_YEAR
		    , A.LECT_HOUR AS LECT_HOUR
		    , A.HOPE_TIME AS HOPE_TIME
		    , A.LECT_COM AS LECT_COM
		    , A.SYLLA_ID
		    , (SELECT COMM_DESC 
         		 FROM COMM 
        		WHERE COMM_ID = E.BUILD_ID) AS BUILD_ID
    		, E.BUILD_NUM
		  FROM SYLLABUS A INNER JOIN PROFESSOR B ON (A.PROF_ID = B.PROF_ID)
		               	  INNER JOIN MAJOR C ON (B.MAJOR_ID = C.MAJOR_ID)
		                  INNER JOIN SUB_MAJOR D ON (A.SUB_MAJOR_ID = D.SUB_MAJOR_ID)
		                  INNER JOIN LECT_ROOM E ON (A.LECT_ROOM_ID = E.LECT_ROOM_ID)
		WHERE A.SYLLA_ID = #{syllaId}
	</select>
	
	<resultMap type="SyllabusVO" id="syllaMap" autoMapping="true">
		<id property="syllaId" column="SYLLA_ID" />
		<association property="professorVO" autoMapping="true" javaType="ProfessorVO"></association>
		<association property="subMajorVO" autoMapping="true" javaType="SubMajorVO"></association>
		<association property="lectRoomVO" autoMapping="true" javaType="LectRoomVO"></association>
		<association property="semesterVO" autoMapping="true" javaType="SemesterVO"></association>
		<association property="syllaApprVO" autoMapping="true" javaType="SyllaApprVO"></association>
	</resultMap>
	
	<select id="selectsylla" parameterType="SyllabusVO" resultMap="syllaMap">
		SELECT A.SYLLA_ID,
		       A.SEME_ID,
		       A.PROF_ID,
		       A.LECT_ROOM_ID,
		       A.SUB_MAJOR_ID,
		       A.LECT_NM,
		       A.CAM_YEAR,
		       A.LECT_HOUR,
		       A.HOPE_TIME,
		       A.HOPE_MAX,
		       A.TEXTBOOK,
		       A.LECT_COM,
		       A.NOTE,
		       A.SYLLA_MEET,
		       B.SYLLA_APPR_ID
		FROM SYLLABUS A INNER JOIN SYLLA_APPR B ON (A.SYLLA_ID = B.SYLLA_ID)
		WHERE A.SYLLA_ID = #{syllaId}
	</select>
	
	
	<insert id="insertAssignRoom" parameterType="kr.or.ddit.vo.SyllabusVO">
		<foreach collection="assignRoomList" item="item" index="index" open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO ASSIGN_ROOM (
			    ASSIGN_ROOM_ID,
			    LECT_ROOM_ID,
			    LECT_TIME_ID
			) VALUES (
			    (SELECT 'DG' || TO_CHAR(SUBSTR(MAX(ASSIGN_ROOM_ID),3,5)+#{index}+1)FROM ASSIGN_ROOM),
			    #{lectRoomId,jdbcType=VARCHAR},
			    #{item.lectTimeId,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	
	
	<insert id="insertLect" parameterType="SyllaApprVO">
		INSERT INTO LECTURE (
				    LECT_ID,
				    SYLLA_APPR_ID,
				    LECT_NM,
				    LECT_STATE,
				    CAM_YEAR,
				    NUM_CLASS,
				    CREDIT,
				    LECT_HOUR,
				    TEXTBOOK,
				    LECT_COM,
				    NOTE,
				    ONF_LINE,
				    ASSIGN_ROOM_ID,
				    SEME_ID
		) VALUES (
			    (SELECT 'DI' || TO_CHAR(SUBSTR(MAX(LECT_ID),3,5)+1)FROM LECTURE),
			    #{syllaApprVO.syllaApprId,jdbcType=VARCHAR},
			    #{lectNm,jdbcType=VARCHAR},
			    'Y',
			    #{camYear,jdbcType=NUMERIC},
			    #{hopeMax,jdbcType=NUMERIC},
			    #{lectHour,jdbcType=NUMERIC},
			    #{lectHour,jdbcType=NUMERIC},
			    #{textbook,jdbcType=VARCHAR},
			    #{lectCom,jdbcType=VARCHAR},
			    #{note,jdbcType=VARCHAR},
			    #{syllaMeet,jdbcType=VARCHAR},
			    (SELECT MAX(ASSIGN_ROOM_ID) FROM ASSIGN_ROOM),
			    #{semesterVO.semeId,jdbcType=VARCHAR}
			)
	</insert>
	
	
	<delete id="deleteLecture" parameterType="SyllabusVO">
		DELETE 
  		  FROM LECTURE
 		 WHERE SYLLA_APPR_ID IN(SELECT SYLLA_APPR_ID
                          		  FROM SYLLA_APPR
                         		 WHERE SYLLA_ID = #{syllaId})
	</delete>
	
	
	<delete id="deleteAssignRoom" parameterType="syllabusVO">
		DELETE 
 		  FROM ASSIGN_ROOM
 		 WHERE LECT_ROOM_ID IN(SELECT LECT_ROOM_ID
                         		 FROM SYLLABUS
                        		WHERE SYLLA_ID = #{syllaId})
	</delete>
	
	
	
	<resultMap type="SyllabusVO" id="syllabusMap" autoMapping="true">
		<id property="syllaId" column="SYLLA_ID"/>
		<association property="semesterVO" autoMapping="true" javaType="SemesterVO"></association>
		<association property="subMajorVO" autoMapping="true" javaType="SubMajorVO"></association>
		<association property="buildingVO" autoMapping="true" javaType="BuildingVO"></association>
		<association property="lectRoomVO" autoMapping="true" javaType="LectRoomVO"></association>
		<association property="syllaApprVO" autoMapping="true" javaType="SyllaApprVO"></association>
		<association property="professorVO" autoMapping="true" javaType="ProfessorVO"></association>
		<collection property="scoreCritList" autoMapping="true" ofType="ScoreCritVO"></collection>
		<collection property="lectWeekList" autoMapping="true" ofType="LectWeekVO"></collection>
	</resultMap>
	
	<select id="selectDetailLect" parameterType="String" resultMap="syllabusMap">
		SELECT B.SEME_YEAR
	    , B.SEME as SEME
	    ,( SELECT USER_NM
	         FROM USR
	        WHERE USR.USER_ID = A.PROF_ID
	    ) AS USER_NM
	    ,(SELECT COMM_DESC
	          FROM COMM
	         WHERE COMM.COMM_ID = C.BUILD_ID
	    ) AS BUILD_ID
	    , C.BUILD_NUM
	    , A.LECT_NM
	    , D.SUBJECT_NM
	    , A.LECT_HOUR
	    , A.CAM_YEAR
	    , A.HOPE_TIME
	    , A.HOPE_MAX
	    , A.TEXTBOOK
	    , A.LECT_COM
	    , A.NOTE
	    ,(SELECT COMM_DESC
	       FROM COMM
	      WHERE COMM.COMM_ID = A.SYLLA_MEET
	    ) AS SYLLA_MEET
	    , A.SYLLA_ID
	    , E.SCORE_CRIT_NM
	    , E.SCORE_CRIT_RATIO
	    , F.LECT_WEEK
	    , F.LECT_WEEKLY
	  FROM SYLLABUS A INNER JOIN SEMESTER B ON (A.SEME_ID = B.SEME_ID)
	                  INNER JOIN LECT_ROOM C ON (A.LECT_ROOM_ID = C.LECT_ROOM_ID)
	                  INNER JOIN SUB_MAJOR D ON (A.SUB_MAJOR_ID = D.SUB_MAJOR_ID)
	                  INNER JOIN SCORE_CRIT E ON (A.SYLLA_ID = E.SYLLA_ID)
	                  INNER JOIN LECT_WEEK F ON (A.SYLLA_ID = F.SYLLA_ID)
		WHERE A.SYLLA_ID = #{syllaId}
	</select>
	
	<select id="selectLectTimes" parameterType="map" resultType="String">
		SELECT A.LECT_TIME_ID
		FROM ASSIGN_ROOM A INNER JOIN LECT_ROOM B ON (A.LECT_ROOM_ID = B.LECT_ROOM_ID)
		WHERE BUILD_ID = #{buildId}
		AND BUILD_NUM = #{buildNum}
	</select>
	
<!-- 	<resultMap type="LectureVO" id="lectureMap" autoMapping="true"> -->
<!-- 		<id property="lectId" column="LECT_ID" /> -->
<!-- 		<association property="profVO" autoMapping="true" javaType="ProfessorVO"></association> -->
<!-- 		<association property="semeVO" autoMapping="true" javaType="SemesterVO"></association> -->
<!-- 	</resultMap> -->
	
<!-- 	<select id="selectLectureList" parameterType="PagingVO" resultMap="lectureMap"> -->
<!-- 		SELECT RNUM, LECT_ID, CAM_YEAR,  -->
<!--        		   LECT_NM, CREDIT, USER_NM,  -->
<!--        		   BUILD_ID, BUILD_NUM, NUM_CLASS,  -->
<!--        		   NUM_PPL, LECT_ROOM_ID, LECT_TIME_ID,  -->
<!--        		   SEME_YEAR, SEME -->
<!-- 		FROM ( -->
<!--         		SELECT ROWNUM AS RNUM -->
<!--                 		, A.LECT_ID -->
<!--                 		, A.CAM_YEAR -->
<!-- 		                , A.LECT_NM -->
<!-- 		                , A.CREDIT -->
<!-- 		                , E.USER_NM -->
<!-- 		                , (SELECT COMM_DESC FROM COMM WHERE COMM_ID = F.BUILD_ID) AS BUILD_ID -->
<!-- 		                , F.BUILD_NUM                 -->
<!-- 		                , A.NUM_CLASS -->
<!-- 		                , F.NUM_PPL -->
<!-- 		                , C.LECT_ROOM_ID -->
<!-- 		                , H.LECT_TIME_ID -->
<!-- 		                , G.SEME_YEAR -->
<!-- 		                , G.SEME -->
<!--           		FROM LECTURE A INNER JOIN SYLLA_APPR B ON (A.SYLLA_APPR_ID = B.SYLLA_APPR_ID) -->
<!--           					   INNER JOIN SYLLABUS C ON (B.SYLLA_ID = C.SYLLA_ID) -->
<!--           					   INNER JOIN PROFESSOR D ON (C.PROF_ID = D.PROF_ID) -->
<!--           					   INNER JOIN USR E ON (B.PROF_ID = E.USER_ID) -->
<!--           					   INNER JOIN LECT_ROOM F ON (C.LECT_ROOM_ID = F.LECT_ROOM_ID) -->
<!--           					   INNER JOIN SEMESTER G ON (C.SEME_ID = G.SEME_ID) -->
<!--           					   LEFT OUTER JOIN ASSIGN_ROOM H ON (F.LECT_ROOM_ID = H.LECT_ROOM_ID) -->
<!--      	 )          -->
<!-- 		WHERE RNUM BETWEEN #{startRow} AND #{endRow} -->
<!-- 	</select> -->
	
<!-- 	<select id="selectTotalRecordLecture" parameterType="kr.or.ddit.vo.PagingVO" resultType="int"> -->
<!-- 		SELECT COUNT(*) -->
<!-- 		FROM LECTURE -->
<!-- 	</select> -->
	
</mapper>