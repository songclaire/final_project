package kr.or.ddit.student.priorSugang.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.student.priorSugang.service.PriorSugangService;
import kr.or.ddit.student.sugang.service.SugangService;
import kr.or.ddit.vo.CurrLectVO;
import kr.or.ddit.vo.LectureVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.SugangCartVO;
import lombok.extern.slf4j.Slf4j;


/**
 * @author 민경진
 * @Since 2023. 3. 2.
 * <pre>
 *
 * ======[[개정이력(Modification Information)]]======
 *   수정일                    수정자                        수정내용
 * --------        --------    -----------------------
 * 2023. 3. 2.       민경진        		생성
 *
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */
@Slf4j
@Controller
@RequestMapping("/student/priorSugang")
public class PriorSugangController {
	
	@Inject
	private PriorSugangService service;
	
	@Inject
	private SugangService sugangService;

	/**
	 * 사전수강신청 게시판 UI 출력
	 * @param model
	 * @return
	 */
	@GetMapping
	public String priorSugangUI() {
		
		return "student/priorSugang/priorSugang";
	}
	
	/**
	 * 사전수강신청 데이터 리스트 출력 메소드
	 * @return
	 */
	@ResponseBody
	@PostMapping(produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	
	public Map<String, Object> priorSugangDataList(
			@RequestBody SugangCartVO cartVO
			){
		Map<String, Object> map = new HashMap<String, Object>();
		CurrLectVO currLectVO = new CurrLectVO();
		currLectVO.setStdId(cartVO.stdId);
		currLectVO.setLectId(cartVO.lectId);
		
		PagingVO<LectureVO> pagingVO = new PagingVO<>(10, 5);
		List<LectureVO> lectureList = service.retrieveLectureList(pagingVO);
		List<LectureVO> cartList = service.retrieveCartList(cartVO.getStdId());
		List<LectureVO> sugangList = sugangService.retrieveSugangList(currLectVO);
		
		map.put("lectureList", lectureList);
		map.put("cartList", cartList);
		map.put("sugangList", sugangList);
		
		return map;
	}
	
	/**
	 * 사전수강신청 강의 검색 목록 출력 메소드
	 * @param detailCondition
	 * @param model
	 * @return
	 */
	@ResponseBody
	@GetMapping(value="/search", produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	public List<LectureVO> priorSugangSearchList(
			@ModelAttribute("detailCondition") LectureVO detailCondition
			, Model model
			) {
		
		PagingVO<LectureVO> pagingVO = new PagingVO<>(10, 5);
		pagingVO.setDetailCondition(detailCondition);
		
		List<LectureVO> lectureList = service.retrieveLectureList(pagingVO);
		return lectureList;
	}
	
	/**
	 * 장바구니 추가 메소드 (post)
	 * @return
	 */
	@ResponseBody
	@PostMapping("/add")
	public Map<String, Object> insertCart(
			@RequestBody SugangCartVO cartVO
			, Model model
			) {
		
		Map<String, Object> map = new HashMap<String, Object>();
		PagingVO<LectureVO> pagingVO = new PagingVO<>(10, 5);
		
		int rowcnt = service.createCart(cartVO);
		if(rowcnt > 0) {
			List<LectureVO> lectureList = service.retrieveLectureList(pagingVO);
			List<LectureVO> cartList = service.retrieveCartList(cartVO.getStdId());
			map.put("lectureList", lectureList);
			map.put("cartList", cartList);
		} else {
			model.addAttribute("message", "서버 오류");
		}
		return map;
	}
	
	/**
	 * 장바구니 삭제 메소드 (delete)
	 * @return
	 */
	@ResponseBody
	@DeleteMapping
	public Map<String, Object> deleteCart(
			@RequestBody SugangCartVO cartVO
			, Model model
			){
		Map<String, Object> map = new HashMap<String, Object>();
		PagingVO<LectureVO> pagingVO = new PagingVO<>(10, 5);
		
		int rowcnt = service.removeCart(cartVO);
		if(rowcnt > 0) {
			List<LectureVO> lectureList = service.retrieveLectureList(pagingVO);
			List<LectureVO> cartList = service.retrieveCartList(cartVO.getStdId());
			map.put("lectureList", lectureList);
			map.put("cartList", cartList);
		} else {
			model.addAttribute("message", "서버 오류");
		}
		return map;
	}
}
