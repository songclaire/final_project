<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.emp.tuitionManage.dao.TuitionEmpDAO">

<!-- 고지서 발송할 전체 재학생 수 조회 -->
<select id="selectTotalRecord" parameterType="String" resultType="int">
	SELECT COUNT(*)
	FROM TUITION
	WHERE SEME_ID = #{semeId}
</select>

<!-- 고지서 발송할 전체 재학생 목록 조회 (교직원) -->
<resultMap type="TuitionVO" id="tuitionStdMap" autoMapping="true">
	<id property="tuitionId" column="TUITION_ID"/>
	<association property="tuitionPayVO" javaType="TuitionPayVO" autoMapping="true"> 
		<id property="tutionPayId" column="TUTION_PAY_ID"/>
	</association>
	<association property="recordVO" javaType="RecordVO" autoMapping="true"> 
		<id property="recoId" column="RECO_ID"/>
	</association>
	<association property="collVO" javaType="CollVO" autoMapping="true"> 
		<id property="collId" column="COLL_ID"/>
	</association>
	<association property="majorVO" javaType="MajorVO" autoMapping="true"> 
		<id property="majorId" column="MAJOR_ID"/>
	</association>
	<association property="semesterVO" javaType="SemesterVO" autoMapping="true"> 
		<id property="semeId" column="SEME_ID"/>
	</association>
	<association property="usrVO" javaType="UsrVO" autoMapping="true"> 
		<id property="userId" column="USER_ID"/>
	</association>
	<collection property="tuitionDetList" ofType="TuitionDetVO" autoMapping="true">
		<id property="tuitionDetId" column="TUITION_DET_ID"></id>
	</collection>
</resultMap>

<select id="selectTuitionStdList" parameterType ="PagingVO" resultMap="tuitionStdMap">
WITH ORDEREDTUITION AS (
	SELECT NVL(D.PAY_STAT, 'N') PAY_STAT
	     , BASE.COLL_NM
	     , (SELECT G.MAJOR_NM FROM MAJOR G WHERE G.MAJOR_ID = BASE.MAJOR_NM) MAJOR_NM
	     , BASE.STD_ID
	     , BASE.CAM_YEAR
	     , BASE.USER_NM
	     , BASE.SEME_ID
	     , (SELECT E.SEME_YEAR FROM SEMESTER E WHERE E.SEME_ID = BASE.SEME_ID) SEME_YEAR
	     , (SELECT F.SEME FROM SEMESTER F WHERE F.SEME_ID = BASE.SEME_ID) SEME
	     , NVL(D.AMOUNT_PAY,0) AMOUNT_PAY
	FROM
	(
	    SELECT DISTINCT A.RECO_ID, A.STD_ID, A.SEME_ID, A.CAM_YEAR, A.REC_NM, A.REC_UPDATE, A.REC_REASON, A.REC_DATE, A.REC_STATUS, A.REJ_REASON
         , B.TUITION_ID, B.COLL_ID, B.SCH_HIST_ID, B.TUITION_AMOUNT
         , C.COLL_NM, C.MAJOR_NM, C.USER_NM
    FROM   RECORD A, TUITION B, V_STU C
    WHERE  A.REC_NM = 'PRE'
    AND    B.SEME_ID = #{detailCondition.semeId}
    AND    A.SEME_ID = B.SEME_ID
    AND    A.STD_ID = C.STD_ID
) BASE LEFT OUTER JOIN TUITION_PAY D ON(BASE.STD_ID = D.STD_ID)
)
		SELECT B.* FROM (
			SELECT ROWNUM RNUM2, A.*
			FROM (
					SELECT ROWNUM RNUM, ORDEREDTUITION.*
					FROM ORDEREDTUITION
			) A
		) B
	WHERE RNUM2 BETWEEN #{startRow} AND #{endRow}
</select>


<!--  등록금 고지서 발송(교직원) -->










</mapper>