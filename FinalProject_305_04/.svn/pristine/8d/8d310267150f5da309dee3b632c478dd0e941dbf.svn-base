package kr.or.ddit.prof.scoreProc.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import kr.or.ddit.prof.scoreProc.dao.ScoreProcessDAO;
import kr.or.ddit.vo.AttendVO;
import kr.or.ddit.vo.LectureVO;
import kr.or.ddit.vo.MyLectureVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.ScoreCritVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class ScoreProcessServiceImpl implements ScoreProcessService {
	
	@Inject
	ScoreProcessDAO dao;
	
	String profId = "";
	String lectId = "";
	
	@Override
	public void setProfId(String profId) {
		this.profId = profId;
	}
	
	@Override
	public void setLectID(String lectId) {
		this.lectId = lectId;
	}
	
	@Override
	public void retrieveLectList(PagingVO<LectureVO> pagingVO) {
		
		log.info("retrieveLectList 진입");
		
		Map<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("profId", profId);
		
		int totalRecord = dao.selectTotalRecord((HashMap<String, Object>) resultMap);
		pagingVO.setTotalRecord(totalRecord);
		
		resultMap.put("startRow", pagingVO.getStartRow());
		resultMap.put("endRow", pagingVO.getEndRow());
		
		List<LectureVO> lectList = dao.selectLectList((HashMap<String, Object>) resultMap);
		pagingVO.setDataList(lectList);
	}


	@Override
	public MyLectureVO retrieveProfStdList(HashMap<String, Object> map) {
		return dao.selectProfStdList(map);
	}

	@Override
	public List<ScoreCritVO> retrieveScoreCritList(String lectId) {
		return dao.selectScoreCritList(lectId);
	}

	@Override
	public String retrieveMtScore(HashMap<String, Object> map) {
		return dao.selectMtScore(map);
	}

	@Override
	public String retrieveFtScore(HashMap<String, Object> map) {
		return dao.selectFtScore(map);
	}

	@Override
	public String retrieveAsgnScore(HashMap<String, Object> map) {
		return dao.selectAsgnAvgScore(map);
	}

	@Override
	public String retrieveAttendScore(HashMap<String, Object> map) {
		return dao.selectAttendScore(map);
	}

	@Override
	public List<AttendVO> retrieveAttendList(HashMap<String, Object> map) {
		return dao.selectAttnedList(map);
	}

	@Override
	public List<String> retrieveAttendCnt(HashMap<String, Object> map) {
		return dao.selectAttendCnt(map);
	}

	@Override
	public int modifyFinScore(HashMap<String, Object> map) {
		return dao.updateFinScore(map);
	}

	@Override
	public int createMtScoreProc(HashMap<String, Object> map) {
		return dao.insertMtScoreProc(map);
	}

	@Override
	public int createFtScoreProc(HashMap<String, Object> map) {
		return dao.insertFtScoreProc(map);
	}

	@Override
	public int createAsgnScoreProc(HashMap<String, Object> map) {
		return dao.insertAsgnScoreProc(map);
	}

	@Override
	public int createAtndScoreProc(HashMap<String, Object> map) {
		return dao.insertAtndScoreProc(map);
	}




}
