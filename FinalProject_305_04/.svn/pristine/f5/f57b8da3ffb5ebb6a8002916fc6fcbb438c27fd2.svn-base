package kr.or.ddit.student.test.controller;


import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import kr.or.ddit.student.test.service.TestService;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.SearchVO;
import kr.or.ddit.vo.TestVO;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

/**
 * @author 이선민
 * @Since 2023. 2. 2.
 * <pre>
 *
 * ======[[개정이력(Modification Information)]]======
 *   수정일                    수정자                        수정내용
 * --------        --------    -----------------------
 * 2023. 2. 1.       민경진             생성
 * 2023. 2. 2.       이선민             시험목록조회
 *
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */

@Slf4j
@RequiredArgsConstructor
@Controller
@RequestMapping("/student/test/**")
public class TestController {

	
	private final TestService service;
	
	
	//시험목록
	@RequestMapping("/")
	public ModelAndView testList(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage
			, @ModelAttribute SearchVO simpleConition //여러개의 객체를 하나로 받을 때 이거 사용함 
			, Model model 
	) {
		//목록 조회 + 전체 게시글 갯수 조회
		PagingVO<TestVO> pagingVO = new PagingVO<>(10, 5);
		pagingVO.setCurrentPage(currentPage); 
		pagingVO.setSimpleCondition(simpleConition); //검색 
		
		ModelAndView mav = new ModelAndView();
		
		List<TestVO> test =  service.retrieveTestList(pagingVO);
		
		//뷰에 내보내기
		mav.addObject("pagingVO", pagingVO); //model.addAttribute("pagingVO", pagingVO);
		mav.addObject("test", test);
		mav.setViewName("student/test/test");
		
		return mav;
	}
	
	
	
	//시험상세보기
	@RequestMapping("/testView")
	public String TestView(
		@RequestParam(value="what",required=true) String testId
		, Model model
	) {
		
		log.info("testId{}=======================", testId);
		TestVO test = service.retrieveTest(testId);
		
		log.info("test{}===", test);
		model.addAttribute("test", test);
		
		return "student/test/testView";
	}
	
	
	
	
}
