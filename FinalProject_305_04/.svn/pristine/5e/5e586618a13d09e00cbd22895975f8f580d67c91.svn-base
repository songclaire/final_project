package kr.or.ddit.campus.certificate.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import kr.or.ddit.campus.certificate.service.CertificateService;
import kr.or.ddit.student.record.service.RecordService;
import kr.or.ddit.vo.CertificateVO;
import kr.or.ddit.vo.EmpVO;
import kr.or.ddit.vo.ProfessorVO;
import kr.or.ddit.vo.StudentVO;
import kr.or.ddit.vo.UsrVO;
import lombok.extern.slf4j.Slf4j;

/**
 * @author 장은호
 * @Since 2023. 2. 6.
 * <pre>O
 *
 * ======[[개정이력(Modification Information)]]======
 *   수정일                    수정자                        수정내용
 * --------          --------    -----------------------
 * 2023. 2. 6.       장은호        		생성
 * 2023. 2.21.       장은호                   certificateBox 이동
 *
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */

@Slf4j
@Controller
public class CertificateController {
	
	@Inject
	private CertificateService service;
	@Inject
	private RecordService recordService;
	
	
	@GetMapping("/campus/certificate/list")
	public String certificateList(
		Model model
	) {
		List<CertificateVO> certList = service.retrieveCertificateList();
		model.addAttribute("certList", certList);
		
		return "campus/certificate/certificateList";
	}
	
	
	@GetMapping("/campus/certificate/{userId}")
	public String certificate(
		@PathVariable String userId
		, Model model
	) {
		// 사용자 기본 정보
		UsrVO usrVO = service.retrieveUserInfo(userId);
		model.addAttribute("usrVO", usrVO);

		// USER_ROLE 구분
		String userRole = usrVO.getUserRole();
		
		// 학생
		if(userRole.equals("ROLE_STD")) {
			StudentVO studentVO = recordService.retrieveRecordList(usrVO.getUserId());
			model.addAttribute("infoVO", studentVO);
		
		// 교수
		} else if(userRole.equals("ROLE_PRF")) {
			ProfessorVO professorVO = service.retrieveProfInfo(usrVO.getUserId());
			model.addAttribute("infoVO", professorVO);
		
		// 교직원
		} else if(userRole.equals("ROLE_EMP")) {
			EmpVO empVO = service.retrieveEmpInfo(usrVO.getUserId());
			model.addAttribute("infoVO", empVO);
		} else {
			
		}
		
		
		// 전체 증명서 중 사용자 권한 별로 조회
		List<CertificateVO> userCertList = service.retrieveUserCertificateList(userId);
		model.addAttribute("userCertList", userCertList);
		
		// 퇴직한 교수 - 재직증명서 발근 불가능
		
		// 퇴직한 교직원 - 재직증명서 발급 불가능
		
		return "campus/certificate/certificate";
	}
	
	
}





