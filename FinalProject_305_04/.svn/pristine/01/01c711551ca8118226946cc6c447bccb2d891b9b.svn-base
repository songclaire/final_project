package kr.or.ddit.student.consult.controller;

import java.util.List;

import javax.annotation.Resource;
import javax.inject.Inject;

import org.springframework.context.annotation.Bean;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.filter.HiddenHttpMethodFilter;

import kr.or.ddit.student.consult.service.StudentConsultService;
import kr.or.ddit.ui.PaginationRenderer;
import kr.or.ddit.validate.DeleteGroup;
import kr.or.ddit.validate.UpdateGroup;
import kr.or.ddit.vo.NoticeVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.ProfessorVO;
import kr.or.ddit.vo.SearchVO;
import lombok.extern.slf4j.Slf4j;
import kr.or.ddit.vo.ConsultVO;


/**
 * @author 민경진
 * @Since 2023. 2. 17.
 * <pre>
 *
 * ======[[개정이력(Modification Information)]]======
 *   수정일                    수정자                        수정내용
 * --------        --------    -----------------------
 * 2023. 2. 17.      민경진              생성
 *
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */
@Slf4j
@Controller
@RequestMapping("/student/consult")
public class StudentConsultController {
	
	@Inject
	private StudentConsultService service;
	
	@Resource(name="bootstrapPaginationRender")
	private PaginationRenderer renderer;
	
	@Bean
	public HiddenHttpMethodFilter hiddenHttpMethodFilter(){
		return new HiddenHttpMethodFilter();
	}
	
	/**
	 * student consult 속성 생성 메소드 - form에 바인딩할 빈 모델 객체 생성
	 */
	@ModelAttribute("consult")
	public ConsultVO studentConsult() {
		return new ConsultVO();
	}

	/**
	 * student consult 게시판 UI 출력 메소드
	 */
	@GetMapping
	public String consultUI(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage
			, @ModelAttribute("simpleCondition") SearchVO searchVO
			, Model model
			) {
		PagingVO<ConsultVO> pagingVO = new PagingVO<>(10, 5);
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setSimpleCondition(searchVO);
		
		service.retreiveConsultList(pagingVO);
		
		model.addAttribute("pagingVO", pagingVO);
		
		return "student/consult/consult";
	}
	
	/**
	 * student consult 게시판 글 목록 출력 메소드 (ajax)
	 */
	@GetMapping(produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	public String consultListData(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage
			, @ModelAttribute("simpleCondition") SearchVO searchVO
			, Model model
			) {
		PagingVO<ConsultVO> pagingVO = new PagingVO<>(10, 5);
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setSimpleCondition(searchVO);
		
		service.retreiveConsultList(pagingVO);
		List<ConsultVO> dataList = pagingVO.getDataList();
		ConsultVO consult = dataList.get(1);
		String stdId = consult.getStdId();
		List<ProfessorVO> profList = service.retrieveProfList(stdId);
		
		model.addAttribute("pagingVO", pagingVO);
		model.addAttribute("profList", profList);
		model.addAttribute("pagingHTML", renderer.renderPagination(pagingVO));
		
		return "jsonView";
	}
	
	/**
	 * 상담 게시글 하나 조회 메소드 
	 */
	@ResponseBody
	@GetMapping(value="/{consId}", produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	public ConsultVO consultData(
			@PathVariable String consId
			) {
		
		ConsultVO consult = service.retrieveConsult(consId);
		
		return consult;
	}
	
	/**
	 * 상담 취소 메소드 (put)
	 */
	@ResponseBody
	@PutMapping(produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	public String cancelConsultState(
			@RequestBody ConsultVO consultVO
			, Model model
			) {
		
		String consId = consultVO.getConsId();
		
		String viewName = null;
		int rowcnt = service.removeConsultState(consId);
		if(rowcnt > 0) {
			viewName = "redirect:/student/consult";
		} else {
			model.addAttribute("message", "서버 오류");
			viewName = "/student/consult/consult";
		}
		
		return viewName;
	}
	
	/**
	 * 상담 신청 메소드 (post)
	 */
	@ResponseBody
	@PostMapping(produces=MediaType.TEXT_PLAIN_VALUE)
	public String insertConsult(
			@RequestBody ConsultVO consult
			, Model model
			) {
		
		String viewName = null;
		int rowcnt = service.createConsult(consult);
		if(rowcnt > 0) {
			viewName = "ok";
		} else {
			model.addAttribute("message", "서버 오류");
			viewName = "no";
		}
		return viewName;	
	}
}
