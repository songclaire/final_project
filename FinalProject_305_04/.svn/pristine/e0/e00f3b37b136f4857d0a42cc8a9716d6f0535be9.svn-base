package kr.or.ddit.student.test.controller;


import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.student.test.service.TestService;
import kr.or.ddit.validate.InsertGroup;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.SearchVO;
import kr.or.ddit.vo.TestAllowVO;
import kr.or.ddit.vo.TestVO;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

/**
 * @author 이선민
 * @Since 2023. 2. 2.
 * <pre>
 *
 * ======[[개정이력(Modification Information)]]======
 *   수정일                    수정자                        수정내용
 * --------        --------    -----------------------
 * 2023. 2. 1.       민경진             생성
 * 2023. 2. 2.       이선민             시험목록조회
 *
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */

@Slf4j
@RequiredArgsConstructor
@Controller
@RequestMapping("/student/test/**")
public class TestController {

	
	private final TestService service;
	
	
	/**
	 * test 속성 생성 메소드
	 * @return
	 */
	@ModelAttribute("test")
	public TestVO test() {
		return new TestVO();
	}
	
	
	/**
	 * 시험목록
	 * @param currentPage
	 * @param simpleConition
	 * @param model
	 * @return
	 */
	@GetMapping
	public ModelAndView testList(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage
			, @ModelAttribute SearchVO simpleConition 
			, Model model 
	) {
		//목록 조회 + 전체 게시글 갯수 조회
		PagingVO<TestVO> pagingVO = new PagingVO<>(10, 5);
		pagingVO.setCurrentPage(currentPage); 
		pagingVO.setSimpleCondition(simpleConition); //검색 
		
		ModelAndView mav = new ModelAndView();
		
		List<TestVO> test =  service.retrieveTestList(pagingVO);
		
		model.addAttribute("TestVO", test);
		
		
		
		//뷰에 내보내기
		mav.addObject("pagingVO", pagingVO); //model.addAttribute("pagingVO", pagingVO);
		mav.addObject("test", test);
		mav.setViewName("student/test/test");
		
		return mav;
	}
	
	
	/**
	 * 시험응시 INSERT
	 * 시험목록 > 시험응시 컨트롤러로 이동 후 정보 저장하고 > 시험목록 > 시험상세보기 컨트롤러로 이동 
	 * @param test
	 * @param model
	 * @return
	 */
	
	@RequestMapping("/testAllow")
	public String testAllowInsert(
		@Validated(InsertGroup.class) @ModelAttribute("test") TestVO test
		, Model model
	) {
		
		String viewName = null;
		
		log.info("testAllow>>>>>>>>{}", test);
		int rowcnt = service.createTestAllow(test);

//		// TestView 컨트롤러로 redirect하면서 파라미터 넘기기 
		if(rowcnt > 0) {
			viewName = "redirect:/student/test/testView?testAllowId="+test.getTestAllowId(); 
		} 
		return viewName;
	}

	
	
	/**
	 * 시험상세보기
	 * @param testId
	 * @param model
	 * @return
	 */
	@RequestMapping("/testView")
	public String TestView(
	 @RequestParam(value="testAllowId",required=true) String testAllowId 
		, Model model
	) {
		
		log.info("testAllowIdsdfsdf{}=======================", testAllowId);
		TestVO test = service.retrieveTest(testAllowId);

		model.addAttribute("test", test);
		
		return "student/test/testView";
	}

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	/**
	 * 학생 시험 제출 
	 * @param test
	 * @param errors
	 * @param model
	 * @return
	 */
	/*	
	@PostMapping("/testView")
	public String testAnsInsert(
		@Validated(InsertGroup.class) @ModelAttribute("test") TestVO test
		, Errors errors
		, Model model
	) {
		log.info("insertTest{}rrrrrr",test);
		String viewName = null;
		
		int rowcnt = service.submitTestStudent(test);
		if(rowcnt > 0) {
			viewName = "redirect:/student/test";
		}
		return viewName;
	}
	*/
		
	
	
	
	
}
