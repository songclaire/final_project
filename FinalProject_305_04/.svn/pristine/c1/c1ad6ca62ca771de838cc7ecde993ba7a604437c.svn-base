<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- = PasswordEncoderFactories.createDelegatingPasswordEncoder -->
	<!-- 비밀번호 인코딩 -->
	<b:bean id="passwordEncoder" class="org.springframework.security.crypto.factory.PasswordEncoderFactories" 
		factory-method="createDelegatingPasswordEncoder"
	/>

	<!-- 사용자 아이디와 비밀번호가 맞는지 확인해주는 것 -->
	<b:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"
		p:userDetailsService-ref="userDetailsService"
		p:passwordEncoder-ref="passwordEncoder"
		p:hideUserNotFoundExceptions="false"
	 />

	<authentication-manager id="authenticationManager">
		<authentication-provider ref="daoAuthenticationProvider" />
	</authentication-manager>
	
	<!-- <user-service> -->
	<!-- <user name="a001" authorities="ROLE_USER" password="java" /> -->
	<!-- <user name="b001" authorities="ROLE_ADMIN" password="java" /> -->
	<!-- </user-service> -->

	<http auto-config="true">
		<form-login
			login-page="/login"
			login-processing-url="/"
			username-parameter="userId"
			password-parameter="userPass"
		/>
	<logout logout-url="/login/logout" logout-success-url="/login" invalidate-session="true"/>

<!-- 	<intercept-url pattern="/**" access="permitAll"/> -->
	<intercept-url pattern="/login" access="permitAll"/>
	<intercept-url pattern="/campus/**" access="hasRole('ROLE_STD','ROLE_PRF','ROLE_EMP')"/>
	<intercept-url pattern="/student/**" access="hasRole('ROLE_STD')"/>
	<intercept-url pattern="/prof/**" access="hasRole('ROLE_PRF')"/>
	<intercept-url pattern="/prof/lectBoard/**" access="hasRole('ROLE_PRF','ROLE_STD')"/>
	<intercept-url pattern="/emp/**" access="hasRole('ROLE_EMP')"/>
	<intercept-url pattern="/download/**" access="isRememberMe()"/>

	<!-- 공격방어안함 true, 함 false -->
	<csrf disabled="true"/>
	</http>
	<!-- p:createTableOnStartup="true" : 최초 서버 구동시 1회 사용함.-->
	<!-- 아이디 기억 -->
	<b:bean id="tokenRepo" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl" 
		p:dataSource-ref="dataSource"
	/>
	<b:bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices" 
		c:tokenRepository-ref="tokenRepo"
		c:userDetailsService-ref="userDetailsService"
		c:key="rememberMeKey1"
		p:parameter="rememberMe"
		p:cookieName="rememberCookie"
		p:tokenValiditySeconds="#{60*60*24*7}"
	/>
	
	<!-- 로그아웃할 때 토큰 없애주는 것 -->
	<b:bean id="compositeLogoutHandler" class="org.springframework.security.web.authentication.logout.CompositeLogoutHandler">
		<b:constructor-arg name="logoutHandlers">
			<b:array>
				<b:ref bean="rememberMeServices"/>
				<b:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" 
					p:clearAuthentication="true"
					p:invalidateHttpSession="true"
				/>
			</b:array>
		</b:constructor-arg>
	</b:bean>
</b:beans>
