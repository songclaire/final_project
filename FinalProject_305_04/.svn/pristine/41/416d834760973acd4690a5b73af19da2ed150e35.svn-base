<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.student.tuition.dao.TuitionDao">

<!-- 등록금 납부 내역 조회(학생) -->

<resultMap type="TuitionPayVO" id="tuitionMap" autoMapping="true">
	<id property="tutionPayId" column="TUTION_PAY_ID"/>
	<association property="scholarshipVO" javaType="ScholarshipVO" autoMapping="true">
		<id property="scholarshipId" column="SCHOLARSHIP_ID"/>
	</association>
	<association property="semesterVO" javaType="SemesterVO" autoMapping="true">
		<id property="semeId" column="SEME_ID"/>
	</association>
	<association property="tuitionVO" javaType="TuitionVO" autoMapping="true">
		<id property="tuitionId" column="TUITION_ID"/>
	</association>
</resultMap>

<select id="selectTuitionList" parameterType="String" resultMap="tuitionMap">
	WITH ORDEREDTUITIONPAY AS (
				SELECT
	                 A.STD_ID
	               , E.SEME_ID 
	               , E.SEME_YEAR
	               , E.SEME
	               , B.TUITION_AMOUNT
	               , D.SCHS_NM
	               , D.SCHS_AMOUNT 
	               , A.AMOUNT_PAY
	               , A.PAY_STAT
				FROM TUITION_PAY A LEFT OUTER JOIN TUITION B ON (A.TUITION_ID = B.TUITION_ID)
	                                INNER JOIN SCH_HIST C ON (B.SCH_HIST_ID = C.SCH_HIST_ID)
	                                INNER JOIN SCHOLARSHIP D ON (C.SCHOLARSHIP_ID = D.SCHOLARSHIP_ID)
	                                INNER JOIN SEMESTER E ON (B.SEME_ID = E.SEME_ID)
				WHERE A.STD_ID=#{stdId}
			)
				SELECT B.* FROM (
				SELECT ROWNUM RNUM2, A.*
				FROM (
						SELECT ROWNUM RNUM, ORDEREDTUITIONPAY.*
						FROM ORDEREDTUITIONPAY
				) A
			) B
</select>

<!-- 등록금 미납 고지서 조회(학생) -->
<resultMap type="TuitionVO" id="tuitionBillMap">
	<id property="tuitionId" column="TUITION_ID"/>
	<association property="tuitionPayVO" javaType="TuitionPayVO" autoMapping="true">
		<id property="tutionPayId" column="TUTION_PAY_ID"/>
	</association>
	<association property="recordVO" javaType="RecordVO" autoMapping="true">
		<id property="recoId" column="RECO_ID"/>
	</association>
	<association property="majorVO" javaType="MajorVO" autoMapping="true">
		<id property="majorId" column="MAJOR_ID"/>
	</association>
	<association property="semesterVO" javaType="SemesterVO" autoMapping="true">
		<id property="semeId" column="SEME_ID"/>
	</association>
	<association property="usrVO" javaType="UsrVO" autoMapping="true">
		<id property="userId" column="USER_ID"/>
	</association>
	<collection property="tuitionDetList" ofType="TuitionDetVO" autoMapping="true">
		<id property="tuitionDetId" column="TUITION_DET_ID"/>
	</collection>
</resultMap>

<select id="selectTuitionBill" parameterType="TuitionVO" resultMap="tuitionBillMap">
	SELECT NVL(D.PAY_STAT, 'N') PAY_STAT
	     , BASE.COLL_NM
	     , (SELECT G.MAJOR_NM FROM MAJOR G WHERE G.MAJOR_ID = BASE.MAJOR_NM) MAJOR_NM
	     , BASE.STD_ID
	     , BASE.CAM_YEAR
	     , BASE.USER_NM
	     , BASE.SEME_ID
	     , (SELECT E.SEME_YEAR FROM SEMESTER E WHERE E.SEME_ID = BASE.SEME_ID) SEME_YEAR
	     , (SELECT F.SEME FROM SEMESTER F WHERE F.SEME_ID = BASE.SEME_ID) SEME
	     , NVL(D.AMOUNT_PAY,0) AMOUNT_PAY
         , E.DETAIL_NM
         , E.DETAIL_CRIT
	FROM
	(
	    SELECT DISTINCT A.RECO_ID, A.STD_ID, A.SEME_ID, A.CAM_YEAR, A.REC_NM, A.REC_UPDATE, A.REC_REASON, A.REC_DATE, A.REC_STATUS, A.REJ_REASON
         , B.TUITION_ID, B.COLL_ID, B.SCH_HIST_ID, B.TUITION_AMOUNT
         , C.COLL_NM, C.MAJOR_NM, C.USER_NM
    FROM   RECORD A, TUITION B, V_STU C
    WHERE   A.STD_ID = #{stdId}
    AND    B.SEME_ID = #{semeId}
    AND    A.SEME_ID = B.SEME_ID
    AND    A.STD_ID = C.STD_ID
) BASE LEFT OUTER JOIN TUITION_PAY D ON(BASE.STD_ID = D.STD_ID)
            INNER JOIN TUITION_DET E ON(BASE.TUITION_ID = E.TUITION_ID)
</select>


<!-- 등록금 완납 영수증 -->
<resultMap type="TuitionPayVO" id="tuitionCheckingMap" autoMapping="true">
	<id property="tutionPayId" column="TUTION_PAY_ID"/>
	<association property="tuitionVO" javaType="TuitionVO" autoMapping="true" >
		<id property="tuitionId" column="TUITION_ID"/>
	</association>
	<association property="semesterVO" javaType="SemesterVO" autoMapping="true" >
		<id property="semeId" column="SEME_ID"/>
	</association>
	<association property="scholarshipVO" javaType="ScholarshipVO" autoMapping="true" >
		<id property="scholarshipId" column="SCHOLARSHIP_ID"/>
	</association>
</resultMap>

<select id="selectTuitionChecking" parameterType="TuitionPayVO" resultMap="tuitionCheckingMap">
     WITH ORDEREDTUITIONPAY AS (
			SELECT
                 A.STD_ID
               , E.SEME_ID 
               , E.SEME_YEAR
               , E.SEME
               , B.TUITION_AMOUNT
               , D.SCHS_NM
               , D.SCHS_AMOUNT 
               , A.AMOUNT_PAY
               , A.PAY_STAT
			FROM TUITION_PAY A LEFT OUTER JOIN TUITION B ON (A.TUITION_ID = B.TUITION_ID)
                                INNER JOIN SCH_HIST C ON (B.SCH_HIST_ID = C.SCH_HIST_ID)
                                INNER JOIN SCHOLARSHIP D ON (C.SCHOLARSHIP_ID = D.SCHOLARSHIP_ID)
                                INNER JOIN SEMESTER E ON (B.SEME_ID = E.SEME_ID)
			WHERE A.STD_ID= #{stdId}
            AND E.SEME_ID = #{semeId}
            AND A.PAY_STAT='기납'
         
		)
			SELECT B.* FROM (
			SELECT ROWNUM RNUM2, A.*
			FROM (
					SELECT ROWNUM RNUM, ORDEREDTUITIONPAY.*
					FROM ORDEREDTUITIONPAY
			) A
		) B
</select>

</mapper>