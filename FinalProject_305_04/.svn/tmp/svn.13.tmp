<?xml version="1.0" encoding="UTF-8"?>
<b:beans  
	xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- = PasswordEncoderFactories.createDelegatingPasswordEncoder -->
	<b:bean id="passwordEncoder" class="org.springframework.security.crypto.factory.PasswordEncoderFactories"
		factory-method="createDelegatingPasswordEncoder"
	 />
	 <!-- 공장 객체는 또 다른 객체를 만들어 주는 역할을 한다 -->
	 
	 
<!-- 사용자 아이디와 비밀번호가 맞는지 확인해주는 것 -->
	<b:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"
		p:userDetailsService-ref="userDetailService"
		p:passwordEncoder-ref="passwordEncoder"
		p:hideUserNotFoundExceptions="false"
	 />
	 
	 
	 
	 
<!-- 	 방식이 좀 다름 -->
	<authentication-manager id="authenticationManager">
		<authentication-provider ref="daoAuthenticationProvider" />
	</authentication-manager>



	
	<http auto-config="true">
		<form-login
			login-page="/login/loginForm" 
			login-processing-url="/"
			username-parameter="userId"
			password-parameter="userPass"
		/>
		<logout logout-url="/login/logout" logout-success-url="/" invalidate-session="true"/>
		
		<csrf disabled="false"/>
	</http>
	
</b:beans>
